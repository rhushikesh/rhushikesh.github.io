<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Rhushikesh's Blog]]></title>
  <link href="http://rhushikesh.github.io/atom.xml" rel="self"/>
  <link href="http://rhushikesh.github.io/"/>
  <updated>2015-01-08T21:52:08+05:30</updated>
  <id>http://rhushikesh.github.io/</id>
  <author>
    <name><![CDATA[Rhushikesh Apte]]></name>
    <email><![CDATA[rhushiapte@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[In Which Our Hero's Website Gets Hacked]]></title>
    <link href="http://rhushikesh.github.io/blog/2015/01/08/in-which-our-heros-website-gets-hacked/"/>
    <updated>2015-01-08T20:35:39+05:30</updated>
    <id>http://rhushikesh.github.io/blog/2015/01/08/in-which-our-heros-website-gets-hacked</id>
    <content type="html"><![CDATA[<p>It was just another day. All work was done for the day. Everything was OK until I opened my blog. BOOM !!! Google alerted big red screen into my face with message “The site ahead contains malware”. My blog got hacked, I became a victim of cyber attack.</p>

<p align="middle">
    <img src="http://rhushikesh.github.io/assets/images/google_error_warning.png" alt="Google error warning" width = "400">
</p>


<p>It was kind of scary. The thing which was working perfectly fine few minutes before, suddenly became malfunctioned. I was totally blank and clueless about what was happening. I went into panic mode without actually solving the issue. Then I took a pause and thought, lets first read and learn about it and then take an effective action rather than to keep trying here and there which will go in vain. Following are my finding, lessons and experiences which I got throughout the process of bringing my blog back to normal from position of being hacked.</p>

<ul>
<li><strong>The first tool you will come across  :</strong></li>
</ul>


<p>While crawling, When google finds any suspicious behaviour from your site, it lists your site as malfunctioned. For security reasons google prevents all users coming directly to site and also marked it under blacklist for search results. On the warning page itself google gives overview of what kind malwares are present on the site so that user should not know them all before landing on the page.</p>

<p align="middle">
    <img src="http://rhushikesh.github.io/assets/images/google_dignositc_page.png" alt="Google dignositc page" width = "550">
</p>


<p>For further and more detailed report you as owner need to register your site in <a href="https://www.google.com/webmasters/">Google Web Master</a>. Generated security report contains detailed information about which attacks are their along with their url location and potential solution. It also provides reading material for each of attack which helps you to tackle them effectively and quickly. Below is the report generated by the tool.</p>

<p align="middle">
    <img src="http://rhushikesh.github.io/assets/images/google_secutiry_report.png" alt="Google secutiry report" width = "550">
</p>


<ul>
<li><p><strong>What kind of attacks are possible :</strong><br><br>So what does it means when someone says I got hacked. Hacking of content basically means any type of content put on your site without owner’s permission and which can potentially harm user and user’s data, in short it is result of security break on your site. As google keeps its user away from malicious sites, it will blacklist your site resulting low priority in search results. So it is always recommended to keep your site secure but this not the ideal world thats why the more important thing is that to clean up all the malware from your site as soon as possible. It will keep your sites search score as it is for google. following are the brief info about what kind of attacks are possible to your site</p>

<ul>
<li><p><strong>Redirects -</strong><br>In this attack hacker puts malicious code into your sites pages which will redirects user to targeted url. In this case target url could be anything which will affect your site’s brand value. In my case also hacker was redirecting user to his domain on which malware is hosted.</p></li>
<li><p><strong>Injected content -</strong><br>In this attack hacker injects any malicious code into your pages. This could be very dangerous as it can potentially harm client by copying or manipulating clients data. I had come across multiple of these attacks on my site. The hacker had injected multiple eval() in theme template which was adding iframes with hacker’s malicious code. In other places hackers had injected iframes into my content not found page which was causing redirect to other sites.</p></li>
<li><p><strong>Added content -</strong><br>In this attack hacker adds extra content into your site like pages, posts etc. In this case it will not harm your existing content but the newly added spammy content can cause your issues in your site’s search result.</p></li>
<li><p><strong>Hidden content -</strong><br>In this attack hacker tries to manipulate your existing content but this is not that straight forward. Hackers put this content such that it is seen differently by search bots and normal user, also known as cloaking. This very dangerous as user will get false results for correctly searched query. This is because search engines thinks it is serving genuine content but hacker is playing in between to display false result to user. This can also be avoided by keeping it in mind while coding to not do anything special for search bots.</p></li>
</ul>
</li>
<li><p><strong>what you should do if your site got affected :</strong><br><br>Now comes the most important part of the discussion that what you should do if get hacked and your site gets affected. Following are the things I came across with and followed to bring my site to normal</p>

<ul>
<li><p><strong>Take your site down immediately -</strong><br>This is important for two reasons. First is that you should not keep hampering your users with malicious content until you fixed it. Second is that you should try to be out from blacklist of different search engines. Try not to give chance to search bots to crawl your site when it is being attacked and is malfunctioned</p></li>
<li><p><strong>Contact your hosting provider -</strong><br>Most of the time if your are using shared hosting site it could be the case that the server itself is hampered with
hacker attacks. Thats why you should first raise ticket into your hosting provider’s support forum. This was that exact case with me :’(</p></li>
<li><p><strong>Change all your security passwords -</strong><br>It could be the case where hacker has theft your security passwords. So you should try to change each and every password related to your site. You can you password generators like 1Password or KeyPass to generate more complex password which will be difficult to hack and could prevent further malicious attacks</p></li>
<li><p><strong>Take backup of your content -</strong><br>This thing you should do frequent, to backup your site content, all your site comments,
like history and site database. It would be useful to you in worst case where you are unable to deal with this attack and you have to restore all from scratch.</p></li>
<li><p><strong>Follow the community and forums -</strong><br>Most of us use CMS like Wordpress, Joomla, Magneto etc. So these CMS communities and hosting sites have fairly strong support for such kind of issues. If you are hosting your site on shared hosting then it is likely to happen that more other users are facing such hacking or malfunctioning issues.</p></li>
<li><p><strong>Updates and Installations -</strong><br>We often don’t look security aspects of the CMS platform or plugins, we just look for user end experience of it. So it is likely that these are easy to get infected. Most of those systems keep improving their security related issues in next releases. So make sure you update and install keeping security in mind.</p></li>
<li><p><strong>Find and remove hacks -</strong><br>There are many of ways to find out which are hacks present on your site. <a href="https://www.google.com/webmasters/">Google webmaster’s</a> security report is one of the options. Other could be security plugins which tries to find flows and hacks present on your site currently and also provide version controlling for your configurations or setting files. There are lot of <a href="https://wordpress.org/plugins/search.php?q=malware+scanner">wordpress malware scanner plugins</a> available in plugin market. After using these options you will get idea where are potential hacks present on the system. Just go and revert all the content to previous date of attack or you can manually go check for code and see whether you can find out any malicious code is there.</p></li>
<li><p><strong>Restore your backup -</strong><br>This the last option you should have. If nothing works for you then you can start from scratch and restore all your
backup.</p></li>
<li><p><strong>Ask google to review your site again -</strong><br>This is the last and most important thing you should do after cleaning all of your hacked content from your site. When you google show up the security report to you, there is option below it to ask google to review your site again. This is basically like flag raising for google to inform that I have resolved and cleaned all the malicious content from my site so please verify it and remove my blog from your blacklist.</p></li>
<li><p><strong>Keep taking precaution for further hacking -</strong><br>So after google has removed you from its blacklist don’t be happy forever and leave as it is. It could surely the next day where you can get hacked again if you don’t follow security guidelines onwards. So stay alert and keep an eye on you site to protect it.</p></li>
</ul>
</li>
</ul>


<p>This time I learnt the lesson in a hard way. This incident really helped me in way to open my eyes towards the
security world. Next time keep in mind that anything which you are using, don&rsquo;t use it in a blind way. Analyse all
the aspects of your plugins, your CMS or your entire hosting platform before proceeding with it. I will suggest you
to learn more about these kind of issues or hacks and be prepared before being next victim.</p>

<p><strong>Stay alert , Stay safe !</strong></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I Went for Production Support. What Happened Next Blew My Mind!]]></title>
    <link href="http://rhushikesh.github.io/blog/2014/12/10/i-went-for-production-support-what-happened-next-blew-my-mind/"/>
    <updated>2014-12-10T21:00:53+05:30</updated>
    <id>http://rhushikesh.github.io/blog/2014/12/10/i-went-for-production-support-what-happened-next-blew-my-mind</id>
    <content type="html"><![CDATA[<p>The word “technical support” has a somewhat negative connotation in developer community. Most think of it as an arduous drag involving looking through piles of logs and stack traces, and taking random guesses. And that&rsquo;s the exact thing I thought before actually experiencing it myself in our project. It gave me a lot of learnings and changed my perspective towards software development and collaboration with other teams.</p>

<p>For past couple of years, we (ThoughtWorks) have been developing a global web platform (CMS, localization, and other content creation tools) in collaboration with a dozen other vendors. For production support, instead of having special dedicated roles, various team members rotate amongst themselves, and take up the support role. In November 2014, I traveled to Istanbul for the same. On a sidenote, Istanbul is an incredibly scenic city, and if you haven’t visited it already, I highly recommend you add it to your bucket list.</p>

<p>Since it is multi vendor team, we have to work with representatives from each team to provide support production issues.</p>

<p>As I was a newbie to support work, I was a bit nervous about the various scenarios and difficulties I was (presumably) going to face. However, throughout the support, I learned loads of things, and found the whole experience interesting and educational. There were handful of stressful situations too, but overall the stint was pretty smooth.</p>

<p>Here are the key learnings from the experience:</p>

<ul>
<li><strong>Empathy and trust -</strong></li>
</ul>


<p>The most important learning probably was that everything is not as straight forward for everyone as we seem to think. We need to accept first that everybody is giving their 100% and have their own problems to solve, and co-operate in the best way possible.</p>

<ul>
<li><strong>Communication -</strong></li>
</ul>


<p>You should keep calm and and not rush for any conclusion around the cause of issue. First make sure your own understanding about the issue and solution is clear, before communicating it to the clients. False communication will lead to more confusion and it will take more time for the issue to be resolved. Clear and proper communication brings everyone at same level with clear understanding about the issue and root cause of it. It helps everyone to take exact required steps reducing multiple back and forth.</p>

<ul>
<li><strong>Debuggability -</strong></li>
</ul>


<p>I agree that in support work you don&rsquo;t get a chance to develop any new feature but the best thing it gives is a chance to go through and debug your existing written code. Every time you do so, you think of <strong>different ways to improve your code</strong>. It’s not always enough to write correct logic in code because that data will work correctly only provided the correct data input to it. Projects like ours where your app is driven by highly interconnected data models coming from different parties, you can easily make silly mistakes at different levels and it’s not always possible to write data validations at every level of data entry. So it is likely to happen that your production issue will be a data issue, and not a code issue.</p>

<p>The second lesson I learned was that your code should properly log various cases, along with sufficient temporal context. I think your code quality is not only defined by how well written your code is or how you follow programming standards or which all language and framework features you have used, but it also by how quickly you can debug your code. In production you have only application logs to look into. Logs are surely important but that doesn&rsquo;t mean you go and add logs every where with entire data. You should put logs with the useful exacted data and only at the specific events. We use <a href="http://www.sunitparekh.in/posts/structured-logging">structure logging</a> in our project, and I have found it to be very beneficial when dealing with huge application log files, especially in conjunction with tools like <a href="http://en.wikipedia.org/wiki/Splunk">Splunk</a>.</p>

<ul>
<li><strong>Improvization + Innovation = Profit!</strong></li>
</ul>


<p>Did I say that in support you don’t get an opportunity to develop? Well, I lied. ;-) When on support, I built a couple of applications that helped me in debugging and also provided me an opportunity to try out some new technologies. The lesson was that, although it is important to debug the issues properly and quickly, it is also important to try and improve the debugging process itself, so that it will not remain redundant. Before doing same thing twice or before debugging same type of issue again, you should wait and think why can&rsquo;t I write something and/or create an app which will do this repetitive and manual process for me. This is the time to let your creative juices flow. You can try new languages or new frameworks to solve your problems. It does not have to be a big application. Even small browser extensions may do the trick. There are many places where you can build these apps like for fetching data from some REST API, for comparison between input data, for posting data or tracking data in your application, and many more.</p>

<p>The learnings I gained on this little adventure have been invaluable, and I believe, also helped me become a better developer.</p>

<p>So, boys and girls, the next time your project manager asks you to go for production support, give him/her an enthusiastic nod and prepare to innovate!</p>

<p align="middle">
    <img src="http://rhushikesh.github.io/assets/images/keep_calm_and_support.png" alt="Keep Calm and Support" width = "400">
</p>


<p>Thanks to <a href="https://twitter.com/missingfaktor">Rahul Phulore</a> for his awesome support and help. And also Thanks to <a href="https://twitter.com/sunitparekh">Sunit Parekh</a> and <a href="https://twitter.com/mikhail_advani">Mikhail Advani</a> for all his guidance and valuable inputs throughout the support period :)</p>
]]></content>
  </entry>
  
</feed>
